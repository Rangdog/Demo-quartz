package com.example.quartz_demo_duplicate.config;

import com.example.quartz_demo_duplicate.job.CronJob;
import com.example.quartz_demo_duplicate.job.SimpleJob;
import com.example.quartz_demo_duplicate.listener.MyJobListener;
import com.example.quartz_demo_duplicate.listener.MySchedulerListener;
import com.example.quartz_demo_duplicate.listener.MyTriggerListener;
import jakarta.annotation.PostConstruct;
import org.quartz.*;
import org.quartz.impl.matchers.GroupMatcher;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import java.util.Set;

@Component
public class JobScheduler {

    private final Scheduler scheduler;

    @Autowired
    public JobScheduler(Scheduler scheduler) {
        this.scheduler = scheduler;
    }

    @PostConstruct
    public void init() throws Exception {
        // X√≥a t·∫•t c·∫£ job hi·ªán c√≥
        for (String groupName : scheduler.getJobGroupNames()) {
            Set<JobKey> jobKeys = scheduler.getJobKeys(GroupMatcher.jobGroupEquals(groupName));
            for (JobKey jobKey : jobKeys) {
                scheduler.deleteJob(jobKey);
                System.out.println("üóëÔ∏è ƒê√£ x√≥a job: " + jobKey);
            }
        }
        // ƒêƒÉng k√Ω c√°c listener th·ªß c√¥ng nh∆∞ trong QuartzMain
        scheduler.getListenerManager().addJobListener(new MyJobListener());
        scheduler.getListenerManager().addTriggerListener(new MyTriggerListener());
        scheduler.getListenerManager().addSchedulerListener(new MySchedulerListener());

        // T·∫°o SimpleJob
        JobDetail simpleJob = JobBuilder.newJob(SimpleJob.class)
                .withIdentity("simpleJob", "group1")
                .build();

        Trigger simpleTrigger = TriggerBuilder.newTrigger()
                .withIdentity("simpleTrigger", "group1")
                .startNow()
                .withSchedule(SimpleScheduleBuilder.simpleSchedule()
                        .withIntervalInSeconds(10)
                        .withRepeatCount(2))
                .build();

        // T·∫°o CronJob
        JobDetail cronJob = JobBuilder.newJob(CronJob.class)
                .withIdentity("cronJob", "group2")
                .build();

        Trigger cronTrigger = TriggerBuilder.newTrigger()
                .withIdentity("cronTrigger", "group2")
                .withSchedule(CronScheduleBuilder.cronSchedule("0/15 * * * * ?"))
                .build();

        // ƒêƒÉng k√Ω v·ªõi scheduler
        scheduler.scheduleJob(simpleJob, simpleTrigger);
        scheduler.scheduleJob(cronJob, cronTrigger);

        // B·∫Øt ƒë·∫ßu scheduler (c·∫ßn n·∫øu ch∆∞a start t·ª± ƒë·ªông)
        scheduler.start();

        System.out.println("‚úÖ Jobs & triggers scheduled in Spring Boot context.");
    }
}
